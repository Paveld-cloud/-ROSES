// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const favoritesList = document.getElementById('favoritesList');

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
async function loadFavorites(chatId) {
    showLoading(favoritesList);
    try {
        const response = await fetch(`/app/favorites?chat_id=${chatId}`);
        const data = await response.json();
        
        if (data.favorites) {
            displayFavorites(data.favorites, favoritesList);
        } else {
            showError(favoritesList, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showError(favoritesList, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
async function addToFavorites(chatId, roseData) {
    try {
        const response = await fetch('/app/favorites/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                first_name: tg.initDataUnsafe.user.first_name || '',
                username: tg.initDataUnsafe.user.username || '',
                rose: roseData
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            tg.showAlert('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            loadFavorites(chatId);
        } else {
            tg.showAlert('‚ùå –û—à–∏–±–∫–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        tg.showAlert('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
    }
}

function showLoading(container) {
    container.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ...</div>';
}

function showError(container, message) {
    container.innerHTML = `<div class="error">${message}</div>`;
}

function displayFavorites(favorites, container) {
    if (favorites.length === 0) {
        container.innerHTML = '<div class="empty-state">üíî –£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–æ–∑</div>';
        return;
    }
    
    container.innerHTML = favorites.map(rose => `
        <div class="rose-card">
            ${rose.photo ? `<img src="${rose.photo}" alt="${rose.name}" class="rose-image" onerror="this.style.display='none'">` : ''}
            <div class="rose-info">
                <h3 class="rose-name">${rose.name}</h3>
                <p class="rose-description">${truncateText(rose.description, 100)}</p>
                <div class="rose-actions">
                    <button class="btn btn-care" onclick="showCare('${rose.id}')">ü™¥ –£—Ö–æ–¥</button>
                    <button class="btn btn-history" onclick="showHistory('${rose.id}')">üìú –ò—Å—Ç–æ—Ä–∏—è</button>
                </div>
            </div>
        </div>
    `).join('');
}

function showCare(roseId) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π —É—Ö–æ–¥–∞
    tg.showAlert('ü™¥ –§—É–Ω–∫—Ü–∏—è —É—Ö–æ–¥–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ');
}

function showHistory(roseId) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∫–∞–∑ –∏—Å—Ç–æ—Ä–∏–∏
    tg.showAlert('üìú –§—É–Ω–∫—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ');
}

function truncateText(text, maxLength) {
    if (text.length <= maxLength) return text;
    return text.substring(0, maxLength) + '...';
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ HTML
window.showCare = showCare;
window.showHistory = showHistory;
window.addToFavorites = addToFavorites;
